{
	"variables": [],
	"info": {
		"name": "dim_brighten_rate_04",
		"_postman_id": "794e97de-482f-01bb-d334-99701b1ff9ea",
		"description": "Using 6 dim fixtures and 1 CCT fixture to test a rim and brighten rates. Using daylight as an input source and verifying that dim/brighten rates are being followed.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "SetConfig_6dim_1cct_1eno",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/setconfig",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"Configuration\",\n    \"fixtures\": [\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_Dim_1\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"1\",\n            \"image\": \"/images/light_eg1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": \"100\",\n            \"previousvalue\": null,\n            \"lastupdated\": \"2017-04-19T17:45:38.009Z\",\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": true,\n            \"status\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ]\n        },\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_Dim_2\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"2\",\n            \"image\": \"/images/light_eg1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": \"100\",\n            \"previousvalue\": null,\n            \"lastupdated\": \"2017-04-19T17:45:40.103Z\",\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": true,\n            \"status\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ]\n        },\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_Dim_3\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"3\",\n            \"image\": \"/images/light_eg1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": \"100\",\n            \"previousvalue\": null,\n            \"lastupdated\": \"2017-04-19T17:45:41.603Z\",\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": true,\n            \"status\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ]\n        },\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_Dim_4\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"4\",\n            \"image\": \"/images/light_eg1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": \"100\",\n            \"previousvalue\": null,\n            \"lastupdated\": \"2017-04-19T17:45:43.165Z\",\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": true,\n            \"status\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ]\n        },\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_Dim_5\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"5\",\n            \"image\": \"/images/light_eg1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": \"100\",\n            \"previousvalue\": null,\n            \"lastupdated\": \"2017-04-19T17:45:44.945Z\",\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": true,\n            \"status\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ]\n        },\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_Dim_6\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"6\",\n            \"image\": \"/images/light_eg1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": \"100\",\n            \"previousvalue\": null,\n            \"lastupdated\": \"2017-04-19T17:45:46.745Z\",\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": true,\n            \"status\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ]\n        },\n        {\n            \"type\": \"cct\",\n            \"assignedname\": \"TEST_FIX_CCT\",\n            \"interface\": {},\n            \"interfacename\": \"rpdg-pwm\",\n            \"outputid\": \"7\",\n            \"image\": \"/images/ceiling_spotlight.jpg\",\n            \"candledim\": false,\n            \"min\": \"2000\",\n            \"max\": \"6500\",\n            \"commonanode\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"colortemp\": 2000,\n            \"brightness\": 100,\n            \"lastuserequestedbrightness\": 100,\n            \"previouscolortemp\": 2000,\n            \"previousbrightness\": 100,\n            \"powerwatts\": \"0.00\",\n            \"daylightlimited\": false,\n            \"hwwarm\": 100,\n            \"hwcool\": 0,\n            \"boundinputs\": [\n                \"Daylight\"\n            ],\n            \"status\": 0\n        },\n        {\n            \"type\": \"dim\",\n            \"assignedname\": \"TEST_FIX_ENO_1\",\n            \"interface\": {},\n            \"interfacename\": \"enocean\",\n            \"outputid\": \"019D35B9\",\n            \"image\": \"/fixtureimg/1.jpg\",\n            \"candledim\": false,\n            \"twelvevolt\": false,\n            \"parameters\": {\n                \"dimoptions\": \"0\",\n                \"dimrate\": \"10\",\n                \"brightenrate\": \"10\",\n                \"resptoocc\": \"-1\",\n                \"resptovac\": \"-1\",\n                \"resptodl50\": \"0\",\n                \"resptodl40\": \"10\",\n                \"resptodl30\": \"25\",\n                \"resptodl20\": \"50\",\n                \"resptodl10\": \"75\",\n                \"resptodl0\": \"100\",\n                \"daylightceiling\": \"100\",\n                \"manualceiling\": \"100\",\n                \"daylightfloor\": \"0\",\n                \"manualfloor\": \"0\"\n            },\n            \"level\": 100,\n            \"lastuserequestedlevel\": 100,\n            \"previousvalue\": 0,\n            \"powerwatts\": 0,\n            \"daylightlimited\": false,\n            \"status\": 0,\n            \"boundinputs\": []\n        }\n    ],\n    \"levelinputs\": [\n        {\n            \"type\": \"daylight\",\n            \"assignedname\": \"Daylight\",\n            \"interface\": \"rpdg\",\n            \"inputid\": \"1\",\n            \"drivelevel\": \"0\",\n            \"group\": \"Daylight\",\n            \"value\": 10,\n            \"previousvalue\": 10,\n            \"enabled\": true\n        }\n    ],\n    \"contactinputs\": [],\n    \"groups\": [\n        {\n            \"name\": \"Daylight\",\n            \"type\": \"brightness\",\n            \"fixtures\": [\n                \"TEST_FIX_Dim_1\",\n                \"TEST_FIX_Dim_2\",\n                \"TEST_FIX_Dim_3\",\n                \"TEST_FIX_Dim_4\",\n                \"TEST_FIX_Dim_5\",\n                \"TEST_FIX_Dim_6\",\n                \"TEST_FIX_CCT\",\n                \"TEST_FIX_ENO_1\"\n            ]\n        }\n    ],\n    \"scenes\": [],\n    \"enocean\": [\n        {\n            \"enoceanid\": \"019D35B9\",\n            \"systemid\": \"10\"\n        }\n    ],\n    \"scenelists\": [],\n    \"occupiedstate\": 0,\n\t\"generalsettings\": {},\n    \"sitezip\": 97219,\n    \"sitelatt\": 45.4736058,\n    \"sitelong\": -122.7349017\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Disable HW polling",
			"request": {
				"url": "http://localhost:3000/tester/enablerpdgpolling",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"polling\": \"false\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "setDaylightLevel_0V",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/tester/setinputlevel",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"interface\": \"rpdg\",\n\t\"type\": \"levelinput\",\n\t\"inputid\": \"1\",\n\t\"levelvolts\": 0\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Set DL Interval to 1 sec & wait 1.5sec",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 1500);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/tester/setdaylighttimerinterval",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"interval\": 1\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Set DaylightInterval to 500 sec",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/tester/setdaylighttimerinterval",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"interval\": 500\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than 70 but less than or equal to 100 \"] = (out1<=100&&out1>70);",
							"tests[\"Value of pwm output 2 is greater than 70 but less than or equal to 100 \"] = (out2<=100&&out2>70);",
							"tests[\"Value of pwm output 3 is greater than 70 but less than or equal to 100 \"] = (out3<=100&&out3>70);",
							"tests[\"Value of pwm output 4 is greater than 70 but less than or equal to 100 \"] = (out4<=100&&out4>70);",
							"tests[\"Value of pwm output 5 is greater than 70 but less than or equal to 100 \"] = (out5<=100&&out5>70);",
							"tests[\"Value of pwm output 6 is greater than 70 but less than or equal to 100 \"] = (out6<=100&&out6>70);",
							"tests[\"Value of pwm output 7 is greater than 70 but less than or equal to 100 \"] = (out7<=100&&out7>70);",
							"tests[\"Value of pwm output 019D35B9 is greater than 70 but less than or equal to 100 \"] = (out8<=100&&out8>70);",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 3000);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than 40 but less than 80 \"] = (out1<80&&out1>40);",
							"tests[\"Value of pwm output 2 is greater than 40 but less than 80 \"] = (out2<80&&out2>40);",
							"tests[\"Value of pwm output 3 is greater than 40 but less than 80 \"] = (out3<80&&out3>40);",
							"tests[\"Value of pwm output 4 is greater than 40 but less than 80 \"] = (out4<80&&out4>40);",
							"tests[\"Value of pwm output 5 is greater than 40 but less than 80 \"] = (out5<80&&out5>40);",
							"tests[\"Value of pwm output 6 is greater than 40 but less than 80 \"] = (out6<80&&out6>40);",
							"tests[\"Value of pwm output 7 is greater than 40 but less than 80 \"] = (out7<80&&out7>40);",
							"tests[\"Value of pwm output 019D35B9 is greater than 40 but less than 80 \"] = (out8<80&&out8>40);",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 3000);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than 10 but less than 40 \"] = (out1<40&&out1>10);",
							"tests[\"Value of pwm output 2 is greater than 10 but less than 40 \"] = (out2<40&&out2>10);",
							"tests[\"Value of pwm output 3 is greater than 10 but less than 40 \"] = (out3<40&&out3>10);",
							"tests[\"Value of pwm output 4 is greater than 10 but less than 40 \"] = (out4<40&&out4>10);",
							"tests[\"Value of pwm output 5 is greater than 10 but less than 40 \"] = (out5<40&&out5>10);",
							"tests[\"Value of pwm output 6 is greater than 10 but less than 40 \"] = (out6<40&&out6>10);",
							"tests[\"Value of pwm output 7 is greater than 10 but less than 40 \"] = (out7<40&&out7>10);",
							"tests[\"Value of pwm output 019D35B9 is greater than 10 but less than 40 \"] = (out8<40&&out8>10);",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 3000);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than or equal to 0 but less than 30 \"] = (out1<30&&out1>=0);",
							"tests[\"Value of pwm output 2 is greater than or equal to 0 but less than 30 \"] = (out2<30&&out2>=0);",
							"tests[\"Value of pwm output 3 is greater than or equal to 0 but less than 30 \"] = (out3<30&&out3>=0);",
							"tests[\"Value of pwm output 4 is greater than or equal to 0 but less than 30 \"] = (out4<30&&out4>=0);",
							"tests[\"Value of pwm output 5 is greater than or equal to 0 but less than 30 \"] = (out5<30&&out5>=0);",
							"tests[\"Value of pwm output 6 is greater than or equal to 0 but less than 30 \"] = (out6<30&&out6>=0);",
							"tests[\"Value of pwm output 7 is greater than or equal to 0 but less than 30 \"] = (out7<30&&out7>=0);",
							"tests[\"Value of pwm output 019D35B9 is greater than or equal to 0 but less than 30 \"] = (out8<30&&out8>=0);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "setDaylightLevel_10V",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/tester/setinputlevel",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"interface\": \"rpdg\",\n\t\"type\": \"levelinput\",\n\t\"inputid\": \"1\",\n\t\"levelvolts\": 10\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Set DL Interval to 1 sec & wait 1.5sec",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 1500);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/tester/setdaylighttimerinterval",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"interval\": 1\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Set DaylightInterval to 500 sec",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/tester/setdaylighttimerinterval",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"interval\": 500\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than or equal to 0 but less than 40 \"] = (out1<40&&out1>=0);",
							"tests[\"Value of pwm output 2 is greater than or equal to 0 but less than 40 \"] = (out2<40&&out2>=0);",
							"tests[\"Value of pwm output 3 is greater than or equal to 0 but less than 40 \"] = (out3<40&&out3>=0);",
							"tests[\"Value of pwm output 4 is greater than or equal to 0 but less than 40 \"] = (out4<40&&out4>=0);",
							"tests[\"Value of pwm output 5 is greater than or equal to 0 but less than 40 \"] = (out5<40&&out5>=0);",
							"tests[\"Value of pwm output 6 is greater than or equal to 0 but less than 40 \"] = (out6<40&&out6>=0);",
							"tests[\"Value of pwm output 7 is greater than or equal to 0 but less than 40 \"] = (out7<40&&out7>=0);",
							"tests[\"Value of pwm output 019D35B9 is greater than or equal to 0 but less than 40 \"] = (out8<40&&out8>=0);",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 3000);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than 10 but less than 55 \"] = (out1<55&&out1>10);",
							"tests[\"Value of pwm output 2 is greater than 10 but less than 55 \"] = (out2<55&&out2>10);",
							"tests[\"Value of pwm output 3 is greater than 10 but less than 55 \"] = (out3<55&&out3>10);",
							"tests[\"Value of pwm output 4 is greater than 10 but less than 55 \"] = (out4<55&&out4>10);",
							"tests[\"Value of pwm output 5 is greater than 10 but less than 55 \"] = (out5<55&&out5>10);",
							"tests[\"Value of pwm output 6 is greater than 10 but less than 55 \"] = (out6<55&&out6>10);",
							"tests[\"Value of pwm output 7 is greater than 10 but less than 55 \"] = (out7<55&&out7>10);",
							"tests[\"Value of pwm output 019D35B9 is greater than 10 but less than 55 \"] = (out8<55&&out8>10);",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 3000);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than 30 but less than 75 \"] = (out1<75&&out1>30);",
							"tests[\"Value of pwm output 2 is greater than 30 but less than 75 \"] = (out2<75&&out2>30);",
							"tests[\"Value of pwm output 3 is greater than 30 but less than 75 \"] = (out3<75&&out3>30);",
							"tests[\"Value of pwm output 4 is greater than 30 but less than 75 \"] = (out4<75&&out4>30);",
							"tests[\"Value of pwm output 5 is greater than 30 but less than 75 \"] = (out5<75&&out5>30);",
							"tests[\"Value of pwm output 6 is greater than 30 but less than 75 \"] = (out6<75&&out6>30);",
							"tests[\"Value of pwm output 7 is greater than 30 but less than 75 \"] = (out7<75&&out7>30);",
							"tests[\"Value of pwm output 019D35B9 is greater than 30 but less than 75 \"] = (out8<75&&out8>40);",
							"var t = new Date().getTime();",
							"while (new Date().getTime() < t + 3000);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"var out1 = jsonData.fixtures[0].level;",
							"var out2 = jsonData.fixtures[1].level;",
							"var out3 = jsonData.fixtures[2].level;",
							"var out4 = jsonData.fixtures[3].level;",
							"var out5 = jsonData.fixtures[4].level;",
							"var out6 = jsonData.fixtures[5].level;",
							"var out7 = jsonData.fixtures[6].hwwarm;",
							"var out8 = jsonData.fixtures[7].level;",
							"tests[\"Value of pwm output 1 is greater than 50 but less than or equal to 75 \"] = (out1<=75&&out1>50);",
							"tests[\"Value of pwm output 2 is greater than 50 but less than or equal to 75 \"] = (out2<=75&&out2>50);",
							"tests[\"Value of pwm output 3 is greater than 50 but less than or equal to 75 \"] = (out3<=75&&out3>50);",
							"tests[\"Value of pwm output 4 is greater than 50 but less than or equal to 75 \"] = (out4<=75&&out4>50);",
							"tests[\"Value of pwm output 5 is greater than 50 but less than or equal to 75 \"] = (out5<=75&&out5>50);",
							"tests[\"Value of pwm output 6 is greater than 50 but less than or equal to 75 \"] = (out6<=75&&out6>50);",
							"tests[\"Value of pwm output 7 is greater than 50 but less than or equal to 75 \"] = (out7<=75&&out7>50);",
							"tests[\"Value of pwm output 019D35B9 is greater than 50 but less than or equal to 75 \"] = (out8<=75&&out8>50);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/config/getconfig",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Enable HW polling",
			"request": {
				"url": "http://localhost:3000/tester/enablerpdgpolling",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"polling\": \"true\"\n}"
				},
				"description": ""
			},
			"response": []
		}
	]
}